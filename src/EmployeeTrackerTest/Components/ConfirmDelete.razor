@if (ShowConfirmation)
{
    <div class="modal-backdrop custom-modal-opacity">
        <div class="modal fade show d-block custom-modal-position" tabindex="-1" role="dialog">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">@ConfirmationTitle</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"
                                @onclick="() => OnConfirmationChange(false)">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        @ConfirmationMessage
                    </div>
                    <div class="modal-footer">

                        <button type="button" class="btn btn-secondary"
                                @onclick="() => OnConfirmationChange(true)">
                            Delete
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    protected bool ShowConfirmation { get; set; }

    
    public string ConfirmationTitle { get; set; } = "Confirm Delete";

    
    public string ConfirmationMessage { get; set; } = "Are you sure you want to delete";

    public void Show()
    {
        ShowConfirmation = true;
        StateHasChanged();
    }

    [Parameter]
    public EventCallback<bool> ConfirmationChanged { get; set; }

    protected async Task OnConfirmationChange(bool value)
    {
        ShowConfirmation = false;
        await ConfirmationChanged.InvokeAsync(value);
    }
}
